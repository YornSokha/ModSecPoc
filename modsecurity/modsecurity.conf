# -- Rule engine initialization ----------------------------------------------

# Enable ModSecurity, attaching it to every transaction. Use detection
# only to start with, because that minimises the chances of post-installation
# disruption.
#
SecRuleEngine On


# -- Request body handling ---------------------------------------------------

# Allow ModSecurity to access request bodies. If you don't, ModSecurity
# won't be able to see any POST parameters, which opens a large security
# hole for attackers to exploit.
#
SecRequestBodyAccess On


# Enable XML request body parser.
# Initiate XML Processor in case of xml content-type
#
SecRule REQUEST_HEADERS:Content-Type "^(?:application(?:/soap\+|/)|text/)xml" \
     "id:'200000',phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML"

# Enable JSON request body parser.
# Initiate JSON Processor in case of JSON content-type; change accordingly
# if your application does not use 'application/json'
#
SecRule REQUEST_HEADERS:Content-Type "^application/json" \
     "id:'200001',phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=JSON"

# Sample rule to enable JSON request body parser for more subtypes.
# Uncomment or adapt this rule if you want to engage the JSON
# Processor for "+json" subtypes
#
#SecRule REQUEST_HEADERS:Content-Type "^application/[a-z0-9.-]+[+]json" \
#     "id:'200006',phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=JSON"

# Maximum request body size we will accept for buffering. If you support
# file uploads then the value given on the first line has to be as large
# as the largest file you are willing to accept. The second value refers
# to the size of data, with files excluded. You want to keep that value as
# low as practical.
#
SecRequestBodyLimit 13107200
SecRequestBodyNoFilesLimit 131072

# What to do if the request body size is above our configured limit.
# Keep in mind that this setting will automatically be set to ProcessPartial
# when SecRuleEngine is set to DetectionOnly mode in order to minimize
# disruptions when initially deploying ModSecurity.
#
SecRequestBodyLimitAction Reject

# Maximum parsing depth allowed for JSON objects. You want to keep this
# value as low as practical.
#
SecRequestBodyJsonDepthLimit 512

# Maximum number of args allowed per request. You want to keep this
# value as low as practical. The value should match that in rule 200007.
SecArgumentsLimit 1000

# If SecArgumentsLimit has been set, you probably want to reject any
# request body that has only been partly parsed. The value used in this
# rule should match what was used with SecArgumentsLimit
SecRule &ARGS "@ge 1000" \
"id:'200007', phase:2,t:none,log,deny,status:400,msg:'Failed to fully parse request body due to large argument count',severity:2"

# Verify that we've correctly processed the request body.
# As a rule of thumb, when failing to process a request body
# you should reject the request (when deployed in blocking mode)
# or log a high-severity alert (when deployed in detection-only mode).
#
SecRule REQBODY_ERROR "!@eq 0" \
"id:'200002', phase:2,t:none,log,deny,status:400,msg:'Failed to parse request body.',logdata:'%{reqbody_error_msg}',severity:2"

# By default be strict with what we accept in the multipart/form-data
# request body. If the rule below proves to be too strict for your
# environment consider changing it to detection-only. You are encouraged
# _not_ to remove it altogether.
#
SecRule MULTIPART_STRICT_ERROR "!@eq 0" \
"id:'200003',phase:2,t:none,log,deny,status:400, \
msg:'Multipart request body failed strict validation: \
PE %{REQBODY_PROCESSOR_ERROR}, \
BQ %{MULTIPART_BOUNDARY_QUOTED}, \
BW %{MULTIPART_BOUNDARY_WHITESPACE}, \
DB %{MULTIPART_DATA_BEFORE}, \
DA %{MULTIPART_DATA_AFTER}, \
HF %{MULTIPART_HEADER_FOLDING}, \
LF %{MULTIPART_LF_LINE}, \
SM %{MULTIPART_MISSING_SEMICOLON}, \
IQ %{MULTIPART_INVALID_QUOTING}, \
IP %{MULTIPART_INVALID_PART}, \
IH %{MULTIPART_INVALID_HEADER_FOLDING}, \
FL %{MULTIPART_FILE_LIMIT_EXCEEDED}'"

# Did we see anything that might be a boundary?
#
# Here is a short description about the ModSecurity Multipart parser: the
# parser returns with value 0, if all "boundary-like" line matches with
# the boundary string which given in MIME header. In any other cases it returns
# with different value, eg. 1 or 2.
#
# The RFC 1341 descript the multipart content-type and its syntax must contains
# only three mandatory lines (above the content):
# * Content-Type: multipart/mixed; boundary=BOUNDARY_STRING
# * --BOUNDARY_STRING
# * --BOUNDARY_STRING--
#
# First line indicates, that this is a multipart content, second shows that
# here starts a part of the multipart content, third shows the end of content.
#
# If there are any other lines, which starts with "--", then it should be
# another boundary id - or not.
#
# After 3.0.3, there are two kinds of types of boundary errors: strict and permissive.
#
# If multipart content contains the three necessary lines with correct order, but
# there are one or more lines with "--", then parser returns with value 2 (non-zero).
#
# If some of the necessary lines (usually the start or end) misses, or the order
# is wrong, then parser returns with value 1 (also a non-zero).
#
# You can choose, which one is what you need. The example below contains the
# 'strict' mode, which means if there are any lines with start of "--", then
# ModSecurity blocked the content. But the next, commented example contains
# the 'permissive' mode, then you check only if the necessary lines exists in
# correct order. Whit this, you can enable to upload PEM files (eg "----BEGIN.."),
# or other text files, which contains eg. HTTP headers.
#
# The difference is only the operator - in strict mode (first) the content blocked
# in case of any non-zero value. In permissive mode (second, commented) the
# content blocked only if the value is explicit 1. If it 0 or 2, the content will
# allowed.
#

#
# See #1747 and #1924 for further information on the possible values for
# MULTIPART_UNMATCHED_BOUNDARY.
#
SecRule MULTIPART_UNMATCHED_BOUNDARY "@eq 1" \
    "id:'200004',phase:2,t:none,log,deny,msg:'Multipart parser detected a possible unmatched boundary.'"


# PCRE Tuning
# We want to avoid a potential RegEx DoS condition
#
SecPcreMatchLimit 1000
SecPcreMatchLimitRecursion 1000

# Some internal errors will set flags in TX and we will need to look for these.
# All of these are prefixed with "MSC_".  The following flags currently exist:
#
# MSC_PCRE_LIMITS_EXCEEDED: PCRE match limits were exceeded.
#
SecRule TX:/^MSC_/ "!@streq 0" \
    "id:'200005',phase:2,t:none,log,deny,msg:'ModSecurity internal error flagged: %{MATCHED_VAR_NAME}'"


# -- Response body handling --------------------------------------------------

# Allow ModSecurity to access response bodies. 
# You should have this directive enabled in order to identify errors
# and data leakage issues.
# 
# Do keep in mind that enabling this directive does increases both
# memory consumption and response latency.
#
SecResponseBodyAccess On

# Which response MIME types do you want to inspect? You should adjust the
# configuration below to catch documents but avoid static files
# (e.g., images and archives).
#
SecResponseBodyMimeType text/plain text/html text/xml

# Buffer response bodies of up to 512 KB in length.
SecResponseBodyLimit 524288

# What happens when we encounter a response body larger than the configured
# limit? By default, we process what we have and let the rest through.
# That's somewhat less secure, but does not break any legitimate pages.
#
SecResponseBodyLimitAction ProcessPartial


# -- Filesystem configuration ------------------------------------------------

# The location where ModSecurity stores temporary files (for example, when
# it needs to handle a file upload that is larger than the configured limit).
# 
# This default setting is chosen due to all systems have /tmp available however, 
# this is less than ideal. It is recommended that you specify a location that's private.
#
SecTmpDir /tmp/

# The location where ModSecurity will keep its persistent data.  This default setting 
# is chosen due to all systems have /tmp available however, it
# too should be updated to a place that other users can't access.
#
SecDataDir /tmp/


# -- File uploads handling configuration -------------------------------------

# The location where ModSecurity stores intercepted uploaded files. This
# location must be private to ModSecurity. You don't want other users on
# the server to access the files, do you?
#
#SecUploadDir /opt/modsecurity/var/upload/

# By default, only keep the files that were determined to be unusual
# in some way (by an external inspection script). For this to work you
# will also need at least one file inspection rule.
#
#SecUploadKeepFiles RelevantOnly

# Uploaded files are by default created with permissions that do not allow
# any other user to access them. You may need to relax that if you want to
# interface ModSecurity to an external program (e.g., an anti-virus).
#
#SecUploadFileMode 0600


# -- Debug log configuration -------------------------------------------------

# The default debug log configuration is to duplicate the error, warning
# and notice messages from the error log.
#
#SecDebugLog /opt/modsecurity/var/log/debug.log
#SecDebugLogLevel 3


# -- Audit log configuration -------------------------------------------------

# Log the transactions that are marked by a rule, as well as those that
# trigger a server error (determined by a 5xx or 4xx, excluding 404,  
# level response status codes).
#
SecAuditEngine RelevantOnly
SecAuditLogRelevantStatus "^(?:5|4(?!04))"

# Log everything we know about a transaction.
SecAuditLogParts ABIJDEFHZ

# Use a single file for logging. This is much easier to look at, but
# assumes that you will use the audit log only ocassionally.
#
SecAuditLogType Serial
SecAuditLog /var/log/modsec_audit.log

# Specify the path for concurrent audit logging.
#SecAuditLogStorageDir /opt/modsecurity/var/audit/


# -- Miscellaneous -----------------------------------------------------------

# Use the most commonly used application/x-www-form-urlencoded parameter
# separator. There's probably only one application somewhere that uses
# something else so don't expect to change this value.
#
SecArgumentSeparator &

# Settle on version 0 (zero) cookies, as that is what most applications
# use. Using an incorrect cookie version may open your installation to
# evasion attacks (against the rules that examine named cookies).
#
SecCookieFormat 0

# Specify your Unicode Code Point.
# This mapping is used by the t:urlDecodeUni transformation function
# to properly map encoded data to your language. Properly setting
# these directives helps to reduce false positives and negatives.
#
SecUnicodeMapFile unicode.mapping 20127

# Improve the quality of ModSecurity by sharing information about your
# current ModSecurity version and dependencies versions.
# The following information will be shared: ModSecurity version,
# Web Server version, APR version, PCRE version, Lua version, Libxml2
# version, Anonymous unique id for host.
# NB: As of April 2022, there is no longer any advantage to turning this
# setting On, as there is no active receiver for the information.
SecStatusEngine Off


# -- Custom Security Rules ----------------------------

# =============================================================================
# SQL/NoSQL Injection Detection Rules
# =============================================================================

# SQL Injection Detection - Common SQL keywords and patterns
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|XML:/*|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_ga/|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer|REQUEST_HEADERS:Content-Type "@detectSQLi" \
    "id:'1001',\
    phase:2,\
    deny,\
    status:403,\
    capture,\
    t:none,t:urlDecodeUni,t:htmlEntityDecode,t:replaceComments,t:compressWhiteSpace,t:lowercase,\
    msg:'SQL Injection Attack Detected via libinjection',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-sqli',\
    ver:'OWASP_CRS/4.0.0',\
    severity:'CRITICAL'"

# Advanced SQL Injection - .NET specific patterns
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|XML:/*|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer "@rx (?i)(?:(?:[\s'\"`´'']+(?:x?or|and)[\s'\"`´'']+(?:[\d]+['\"`´'']?[\s'\"`´'']*[=<>]+[\s'\"`´'']*[\d]+|[\w\-]+[\s'\"`´'']*[=<>]+[\s'\"`´'']*[\w\-]+))|(?:select[\s\w\*\(\),]*from|insert[\s\w\(\)]*into|update[\s\w]*set|delete[\s\w]*from|exec(?:ute)?[\s\(]*[\w\.]+)|(?:union[\s\w\(\),]*select)|(?:drop[\s\w]*(?:table|database|schema|index|view|trigger|procedure|function))|(?:alter[\s\w]*(?:table|database|schema|index|view|trigger|procedure|function))|(?:create[\s\w]*(?:table|database|schema|index|view|trigger|procedure|function))|(?:truncate[\s\w]*table)|(?:bulk[\s\w]*insert)|(?:backup[\s\w]*(?:database|log))|(?:restore[\s\w]*(?:database|log)))" \
    "id:'1002',\
    phase:2,\
    deny,\
    status:403,\
    capture,\
    t:none,t:urlDecodeUni,t:htmlEntityDecode,t:replaceComments,t:compressWhiteSpace,t:lowercase,\
    msg:'Advanced SQL Injection Attack (.NET patterns)',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'platform-multi',\
    tag:'attack-sqli',\
    severity:'CRITICAL'"

# NoSQL Injection Detection (MongoDB, etc.)
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|XML:/*|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer "@rx (?i)(?:\$(?:where|ne|eq|gt|gte|lt|lte|in|nin|exists|type|size|all|elemMatch|regex|options)|(?:this\.)|(?:Object\.)|(?:db\.|collection\.|find\(|findOne\(|insert\(|update\(|remove\(|drop\()|(?:\{\s*\$)|(?:javascript:|eval\s*\()|(?:sleep\s*\()|(?:benchmark\s*\())" \
    "id:'1003',\
    phase:2,\
    deny,\
    status:403,\
    capture,\
    t:none,t:urlDecodeUni,t:htmlEntityDecode,t:replaceComments,t:compressWhiteSpace,t:lowercase,\
    msg:'NoSQL Injection Attack Detected',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'platform-multi',\
    tag:'attack-nosqli',\
    severity:'CRITICAL'"

# =============================================================================
# Cross-Site Scripting (XSS) Detection Rules
# =============================================================================

# XSS Detection via libinjection
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|XML:/*|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_ga/|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer "@detectXSS" \
    "id:'2001',\
    phase:2,\
    deny,\
    status:403,\
    capture,\
    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeWhitespace,\
    msg:'XSS Attack Detected via libinjection',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-xss',\
    severity:'CRITICAL'"

# Advanced XSS patterns - Script tags and event handlers
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|XML:/*|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer "@rx (?i)(?:<(?:script|iframe|object|embed|applet|meta|link|style|img|svg|audio|video|source)(?:\s|>|/>))|(?:on(?:load|click|mouseover|mouseout|focus|blur|change|submit|reset|keydown|keyup|keypress|error|abort|resize|scroll|unload|beforeunload|hashchange|pagehide|pageshow|popstate|storage|online|offline|message)\s*=)|(?:javascript\s*:)|(?:data\s*:(?:text/html|application/javascript))|(?:vbscript\s*:)|(?:expression\s*\()|(?:@import)|(?:behavior\s*:)|(?:-moz-binding)|(?:mocha\s*:)|(?:livescript\s*:)" \
    "id:'2002',\
    phase:2,\
    deny,\
    status:403,\
    capture,\
    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeWhitespace,t:lowercase,\
    msg:'Advanced XSS Attack Pattern Detected',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'platform-multi',\
    tag:'attack-xss',\
    severity:'CRITICAL'"

# DOM-based XSS patterns
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|XML:/*|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer "@rx (?i)(?:document\.(?:write|writeln|cookie|domain|location|referrer|URL)|window\.(?:location|name|status)|(?:eval|setTimeout|setInterval)\s*\(|(?:unescape|decodeURI|decodeURIComponent)\s*\(|(?:innerHTML|outerHTML)\s*=|(?:src|href)\s*=\s*['\"]?\s*(?:javascript|data|vbscript))" \
    "id:'2003',\
    phase:2,\
    deny,\
    status:403,\
    capture,\
    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeWhitespace,t:lowercase,\
    msg:'DOM-based XSS Attack Pattern Detected',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-javascript',\
    tag:'platform-multi',\
    tag:'attack-xss',\
    severity:'CRITICAL'"

# =============================================================================
# Cross-Site Request Forgery (CSRF) Protection Rules
# =============================================================================

# CSRF Token Missing (for state-changing operations)
SecRule REQUEST_METHOD "@rx ^(?:POST|PUT|DELETE|PATCH)$" \
    "id:'3001',\
    phase:2,\
    pass,\
    t:none,\
    nolog,\
    chain"
    SecRule &REQUEST_HEADERS:X-CSRF-Token "@eq 0" \
        "t:none,\
        chain"
        SecRule &ARGS:__RequestVerificationToken "@eq 0" \
            "block,\
            msg:'Missing CSRF Token for State-Changing Request',\
            logdata:'Method: %{REQUEST_METHOD}, URI: %{REQUEST_URI}',\
            tag:'application-multi',\
            tag:'language-dotnet',\
            tag:'attack-csrf',\
            severity:'ERROR',\
            setvar:'tx.anomaly_score_pl1=+%{tx.error_anomaly_score}',\
            setvar:'tx.csrf_score=+1'"

# Suspicious Referer for CSRF
SecRule REQUEST_METHOD "@rx ^(?:POST|PUT|DELETE|PATCH)$" \
    "id:'3002',\
    phase:2,\
    pass,\
    t:none,\
    nolog,\
    chain"
    SecRule REQUEST_HEADERS:Referer "!@beginsWith %{request_headers.host}" \
        "block,\
        capture,\
        t:none,t:lowercase,\
        msg:'Suspicious Cross-Domain Request (Potential CSRF)',\
        logdata:'Referer: %{REQUEST_HEADERS.Referer}, Host: %{REQUEST_HEADERS.Host}',\
        tag:'application-multi',\
        tag:'language-dotnet',\
        tag:'attack-csrf',\
        severity:'WARNING',\
        setvar:'tx.anomaly_score_pl1=+%{tx.warning_anomaly_score}',\
        setvar:'tx.csrf_score=+1'"

# =============================================================================
# Insecure Deserialization Detection Rules (.NET specific)
# =============================================================================

# .NET Binary Formatter Detection
SecRule REQUEST_BODY "@rx (?i)(?:System\.Runtime\.Serialization|BinaryFormatter|ObjectStateFormatter|SoapFormatter|NetDataContractSerializer|DataContractJsonSerializer)" \
    "id:'5001',\
    phase:2,\
    block,\
    capture,\
    t:none,t:base64Decode,\
    msg:'.NET Insecure Deserialization - Binary Formatter Detected',\
    logdata:'Matched Data: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-deserialization',\
    severity:'CRITICAL',\
    setvar:'tx.anomaly_score_pl1=+%{tx.critical_anomaly_score}',\
    setvar:'tx.deserialization_score=+1'"

# JSON.NET/Newtonsoft Unsafe Patterns
SecRule REQUEST_BODY "@rx (?i)(?:\$type['\"]?\s*:\s*['\"]?(?:System\.|mscorlib|ObjectDataProvider|WindowsIdentity|ClaimsIdentity|RolePrincipal))" \
    "id:'5003',\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'.NET Insecure Deserialization - JSON.NET $type Gadget',\
    logdata:'Matched Data: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-deserialization',\
    severity:'CRITICAL',\
    setvar:'tx.anomaly_score_pl1=+%{tx.critical_anomaly_score}',\
    setvar:'tx.deserialization_score=+1'"

# =============================================================================
# File Upload Vulnerability Detection Rules
# =============================================================================

# Dangerous File Extensions
SecRule FILES_NAMES "@rx (?i)\.(?:exe|bat|cmd|com|pif|scr|vbs|vbe|js|jse|wsf|wsh|msi|msp|hta|jar|war|ear|asp|aspx|php|jsp|cfm|cgi|pl|py|rb|sh|ps1|psm1)$" \
    "id:'6001',\
    phase:2,\
    deny,\
    status:403,\
    capture,\
    t:none,t:lowercase,\
    msg:'Dangerous File Upload - Executable File Extension',\
    logdata:'Filename: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-file-upload',\
    severity:'ERROR',\
    setvar:'tx.anomaly_score_pl1=+%{tx.error_anomaly_score}',\
    setvar:'tx.file_upload_score=+1'"

# Double Extension Detection
SecRule FILES_NAMES "@rx (?i)\.[a-z0-9]{1,5}\.[a-z0-9]{1,5}$" \
    "id:'6002',\
    phase:2,\
    block,\
    capture,\
    t:none,t:lowercase,\
    msg:'Dangerous File Upload - Double Extension Detected',\
    logdata:'Filename: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-file-upload',\
    severity:'WARNING',\
    setvar:'tx.anomaly_score_pl1=+%{tx.warning_anomaly_score}',\
    setvar:'tx.file_upload_score=+1'"

# Web Shell Content Detection
SecRule FILES "@rx (?i)(?:(?:eval|exec|system|shell_exec|passthru|file_get_contents|file_put_contents|fopen|fwrite|include|require)[\s\(]|(?:cmd|command|system|exec|shell)[\s\(]|(?:<%|%>|<\?php|\?>)|(?:response\.write|server\.execute|server\.transfer)[\s\(]|(?:Process\.Start|ProcessStartInfo|System\.Diagnostics))" \
    "id:'6003',\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'Web Shell Upload Detected',\
    logdata:'Suspicious content found in uploaded file',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'attack-file-upload',\
    severity:'CRITICAL',\
    setvar:'tx.anomaly_score_pl1=+%{tx.critical_anomaly_score}',\
    setvar:'tx.file_upload_score=+1'"

# =============================================================================
# Command/OS Injection Detection Rules
# =============================================================================

# Command Injection - Basic patterns
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|XML:/*|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer "@rx (?i)(?:;|\||&|`|\$\(|\${|&&|\|\||>>|<<|>|<|\\|/bin/|/usr/bin/|/sbin/|/usr/sbin/|cmd\.exe|powershell\.exe|pwsh\.exe|bash|sh|zsh|csh|tcsh|ksh)" \
    "id:'7001',\
    phase:2,\
    block,\
    capture,\
    t:none,t:urlDecodeUni,t:htmlEntityDecode,\
    msg:'OS Command Injection Attack',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-injection-command',\
    severity:'CRITICAL',\
    setvar:'tx.anomaly_score_pl1=+%{tx.critical_anomaly_score}',\
    setvar:'tx.command_injection_score=+1'"

# Windows Command Injection
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|XML:/*|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer "@rx (?i)(?:(?:net\.exe|netstat\.exe|ping\.exe|nslookup\.exe|telnet\.exe|ftp\.exe|tftp\.exe|reg\.exe|regedit\.exe|sc\.exe|tasklist\.exe|taskkill\.exe|wmic\.exe|rundll32\.exe|regsvr32\.exe|bitsadmin\.exe|certutil\.exe)[\s\(\&\|;]|(?:whoami|ipconfig|systeminfo|dir|type|copy|move|del|md|rd|attrib|cacls|icacls|takeown|runas)[\s\(\&\|;])" \
    "id:'7002',\
    phase:2,\
    block,\
    capture,\
    t:none,t:urlDecodeUni,t:htmlEntityDecode,\
    msg:'Windows OS Command Injection Attack',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'platform-windows',\
    tag:'attack-injection-command',\
    severity:'CRITICAL',\
    setvar:'tx.anomaly_score_pl1=+%{tx.critical_anomaly_score}',\
    setvar:'tx.command_injection_score=+1'"

# PowerShell Command Injection
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|XML:/*|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer "@rx (?i)(?:powershell|pwsh|invoke-expression|iex|invoke-command|icm|start-process|get-process|stop-process|get-service|start-service|stop-service|get-wmiobject|gwmi|invoke-wmimethod|iwmi|new-object|downloadstring|downloadfile|webrequest|webclient)" \
    "id:'7003',\
    phase:2,\
    block,\
    capture,\
    t:none,t:urlDecodeUni,t:htmlEntityDecode,\
    msg:'PowerShell Command Injection Attack',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'platform-windows',\
    tag:'attack-injection-command',\
    severity:'CRITICAL',\
    setvar:'tx.anomaly_score_pl1=+%{tx.critical_anomaly_score}',\
    setvar:'tx.command_injection_score=+1'"

# =============================================================================
# Directory Traversal Detection Rules
# =============================================================================

# Path Traversal - Basic patterns
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|QUERY_STRING|REQUEST_URI|XML:/* "@rx (?i)(?:\.\.[\\/]|[\\/]\.\.[\\/]|\.\.%(?:2f|5c)|%(?:2f|5c)\.\.%(?:2f|5c)|\.\.\\\\|\\\\\.\.\\\\|\.\.%5c|%5c\.\.%5c|\.\.%252f|%252f\.\.%252f|\.\.%c0%af|%c0%af\.\.%c0%af)" \
    "id:'8001',\
    phase:2,\
    deny,\
    status:403,\
    capture,\
    t:none,t:urlDecodeUni,t:htmlEntityDecode,t:utf8toUnicode,\
    msg:'Path Traversal Attack - Request Blocked',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-path-traversal',\
    severity:'CRITICAL'"

# Windows Absolute Path Detection
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|QUERY_STRING|REQUEST_URI|XML:/* "@rx (?i)(?:[a-z]:|\\\\\\\\|%[0-9a-f]{2}:|\\\\\\\\\.\\\\|\\\\\\\\[a-z0-9.-]+\\\\|%5c%5c|%252f%252f)" \
    "id:'8002',\
    phase:2,\
    deny,\
    status:403,\
    capture,\
    t:none,t:urlDecodeUni,t:htmlEntityDecode,t:utf8toUnicode,\
    msg:'Windows Absolute Path Traversal Attack - Request Blocked',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'platform-windows',\
    tag:'attack-path-traversal',\
    severity:'CRITICAL'"

# Sensitive File Access Attempts
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|QUERY_STRING|REQUEST_URI|XML:/* "@rx (?i)(?:web\.config|machine\.config|global\.asax|app\.config|connectionstrings\.config|appsettings\.json|launchsettings\.json|\.cs$|\.dll$|\.pdb$|bin/|app_data/|app_code/|\.mdf$|\.ldf$)" \
    "id:'8003',\
    phase:2,\
    deny,\
    status:403,\
    capture,\
    t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,t:utf8toUnicode,\
    msg:'Attempt to Access Sensitive .NET Configuration Files - Request Blocked',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-path-traversal',\
    severity:'CRITICAL'"

# Double-Encoded Path Traversal Detection
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|QUERY_STRING|REQUEST_URI|XML:/* "@rx (?i)(?:\.\.%25(?:2f|5c)|%25(?:2f|5c)\.\.%25(?:2f|5c)|%252e%252e%252f|%252e%252e%255c|%c0%ae%c0%ae%c0%af)" \
    "id:'8004',\
    phase:2,\
    deny,\
    status:403,\
    capture,\
    t:none,t:urlDecodeUni,t:htmlEntityDecode,t:utf8toUnicode,\
    msg:'Double-Encoded Path Traversal Attack - Request Blocked',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-path-traversal',\
    severity:'CRITICAL'"

# =============================================================================
# Security Misconfiguration Detection Rules
# =============================================================================

# Debug Information Disclosure in Responses
SecRule RESPONSE_BODY "@rx (?i)(?:stack trace|exception details|system\.exception|argumentnullexception|nullreferenceexception|system\.data\.sqlclient|connectionstring|server error|debug mode|compilation debug|customErrors mode|trace enabled)" \
    "id:'9001',\
    phase:4,\
    pass,\
    capture,\
    t:none,\
    msg:'Debug Information Disclosure Detected',\
    logdata:'Sensitive information found in response: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-disclosure',\
    severity:'WARNING',\
    setvar:'tx.anomaly_score_pl4=+%{tx.warning_anomaly_score}',\
    setvar:'tx.information_disclosure_score=+1'"

# Version Information Disclosure
SecRule RESPONSE_HEADERS:Server|RESPONSE_HEADERS:X-Powered-By|RESPONSE_HEADERS:X-AspNet-Version|RESPONSE_HEADERS:X-AspNetMvc-Version "@rx (?i)(?:asp\.net|microsoft|iis|kestrel)" \
    "id:'9002',\
    phase:3,\
    deny,\
    capture,\
    t:none,\
    msg:'Server Version Information Disclosure',\
    logdata:'Version header: %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-disclosure',\
    severity:'NOTICE',\
    setvar:'tx.anomaly_score_pl4=+%{tx.notice_anomaly_score}',\
    setvar:'tx.information_disclosure_score=+1'"

# Unhandled Application Error Detection
SecRule RESPONSE_STATUS "@rx ^5[0-9]{2}$" \
    "id:'9003',\
    phase:3,\
    pass,\
    t:none,\
    nolog,\
    chain"
    SecRule RESPONSE_BODY "@rx (?i)(?:runtime error|server error|application error|unhandled exception|500 - internal server error)" \
        "msg:'Unhandled Application Error Detected',\
        logdata:'Status: %{RESPONSE_STATUS}, Error indication in response body',\
        tag:'application-multi',\
        tag:'language-dotnet',\
        tag:'attack-disclosure',\
        severity:'WARNING',\
        setvar:'tx.anomaly_score_pl4=+%{tx.warning_anomaly_score}',\
        setvar:'tx.information_disclosure_score=+1'"

# =============================================================================
# Sensitive Data Exposure Detection Rules
# =============================================================================

# Credit Card Number Detection in Responses
SecRule RESPONSE_BODY "@rx (?:\b(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3[0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12})\b)" \
    "id:'10001',\
    phase:4,\
    pass,\
    capture,\
    t:none,\
    msg:'Credit Card Number Detected in Response',\
    logdata:'Potential credit card number found',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-disclosure',\
    severity:'ERROR',\
    setvar:'tx.anomaly_score_pl4=+%{tx.error_anomaly_score}',\
    setvar:'tx.data_leakage_score=+1'"

# Social Security Number Detection
SecRule RESPONSE_BODY "@rx \b(?:\d{3}-?\d{2}-?\d{4})\b" \
    "id:'10002',\
    phase:4,\
    pass,\
    capture,\
    t:none,\
    msg:'Social Security Number Pattern Detected in Response',\
    logdata:'Potential SSN pattern found',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-disclosure',\
    severity:'ERROR',\
    setvar:'tx.anomaly_score_pl4=+%{tx.error_anomaly_score}',\
    setvar:'tx.data_leakage_score=+1'"

# Connection String Exposure
SecRule RESPONSE_BODY "@rx (?i)(?:server\s*=|data\s+source\s*=|initial\s+catalog\s*=|integrated\s+security\s*=|user\s+id\s*=|password\s*=|connection\s+timeout\s*=|provider\s*=)" \
    "id:'10003',\
    phase:4,\
    pass,\
    capture,\
    t:none,\
    msg:'Database Connection String Detected in Response',\
    logdata:'Connection string pattern found: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-disclosure',\
    severity:'CRITICAL',\
    setvar:'tx.anomaly_score_pl4=+%{tx.critical_anomaly_score}',\
    setvar:'tx.data_leakage_score=+1'"

# API Key/Token Exposure
SecRule RESPONSE_BODY "@rx (?i)(?:api[_-]?key|access[_-]?token|secret[_-]?key|private[_-]?key|jwt|bearer)\s*[:=]\s*['\"]?[a-zA-Z0-9+/=-]{20,}" \
    "id:'10004',\
    phase:4,\
    pass,\
    capture,\
    t:none,\
    msg:'API Key or Token Detected in Response',\
    logdata:'Potential API credential found',\
    tag:'application-multi',\
    tag:'language-dotnet',\
    tag:'attack-disclosure',\
    severity:'CRITICAL',\
    setvar:'tx.anomaly_score_pl4=+%{tx.critical_anomaly_score}',\
    setvar:'tx.data_leakage_score=+1'"



